name: CI

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly
      run: |
        rustup toolchain install nightly
        rustup component add rustfmt --toolchain nightly
    - name: Check formatting
      run: cargo +nightly fmt --all -- --check

  test:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        features: ['', 'flexible-string']
    env:
      ADD_FEATURES: 'log libsystemd'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libsystemd-dev
    - name: Run tests with additional features
      if: matrix.features == ''
      run: cargo test --features "${{ env.ADD_FEATURES }}"
    - name: Run tests with additional and specified features
      if: matrix.features != ''
      run: cargo test --features "${{ env.ADD_FEATURES }} ${{ matrix.features }}" --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install libsystemd-dev
    - name: Install nightly
      run: |
        rustup toolchain install nightly
        rustup component add clippy --toolchain nightly
    - name: Run clippy
      run: cargo +nightly clippy --all-features --tests --benches -- -D warnings
