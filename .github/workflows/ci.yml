name: CI

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # When updating this, also update:
  # - src/lib.rs
  # - Cargo.toml
  # - README.md
  rust_minver: 1.56.0

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nightly
      run: |
        rustup toolchain install nightly
        rustup component add rustfmt --toolchain nightly
    - name: Cache cargo directories
      uses: Swatinem/rust-cache@v1
    - name: Check formatting
      run: cargo +nightly fmt --all -- --check

  test:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        features: ['', 'flexible-string', 'source-location']
    env:
      ADD_FEATURES: 'log native multi-thread'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libsystemd-dev
    - name: Cache cargo directories
      uses: Swatinem/rust-cache@v1
    - name: Run tests with additional features
      if: matrix.features == ''
      run: cargo test --features "${{ env.ADD_FEATURES }}"
    - name: Run tests with additional and specified features
      if: matrix.features != ''
      run: cargo test --features "${{ env.ADD_FEATURES }} ${{ matrix.features }}" --verbose

  clippy:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libsystemd-dev
    - name: Install nightly
      run: |
        rustup toolchain install nightly
        rustup component add clippy --toolchain nightly
    - name: Cache cargo directories
      uses: Swatinem/rust-cache@v1
    - name: Run clippy 
      run: cargo clippy --all-features --tests --examples -- -D warnings
    - name: Run clippy nightly for benches
      run: cargo +nightly clippy --all-features --benches

  check-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install libsystemd-dev
    - name: Install nightly
      run: rustup toolchain install nightly
    - name: Cache cargo directories
      uses: Swatinem/rust-cache@v1
    - name: Run rustdoc
      run: |
        cd spdlog
        cargo +nightly rustdoc --all-features -- -D warnings
        cd ../spdlog-macros
        cargo +nightly rustdoc --all-features -- -D warnings

  check-minver:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install libsystemd-dev
    - name: Install Rust ${{ env.rust_minver }}
      run: rustup toolchain install ${{ env.rust_minver }}
    - name: Cache cargo directories
      uses: Swatinem/rust-cache@v1
    - name: Run check for core with Rust ${{ env.rust_minver }}
      run: cargo +${{ env.rust_minver }} check --all-features
